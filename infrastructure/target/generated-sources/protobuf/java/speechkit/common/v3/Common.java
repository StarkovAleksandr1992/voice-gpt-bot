// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: speechkit/v3/common.proto

package speechkit.common.v3;

public final class Common {
  private Common() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AudioContentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:speechkit.v3.AudioContent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes content = 1;</code>
     * @return Whether the content field is set.
     */
    boolean hasContent();
    /**
     * <code>bytes content = 1;</code>
     * @return The content.
     */
    com.google.protobuf.ByteString getContent();

    /**
     * <pre>
     * Description of the audio format.
     * </pre>
     *
     * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
     * @return Whether the audioSpec field is set.
     */
    boolean hasAudioSpec();
    /**
     * <pre>
     * Description of the audio format.
     * </pre>
     *
     * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
     * @return The audioSpec.
     */
    speechkit.common.v3.Common.AudioFormatOptions getAudioSpec();
    /**
     * <pre>
     * Description of the audio format.
     * </pre>
     *
     * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
     */
    speechkit.common.v3.Common.AudioFormatOptionsOrBuilder getAudioSpecOrBuilder();

    public speechkit.common.v3.Common.AudioContent.AudioSourceCase getAudioSourceCase();
  }
  /**
   * Protobuf type {@code speechkit.v3.AudioContent}
   */
  public static final class AudioContent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:speechkit.v3.AudioContent)
      AudioContentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AudioContent.newBuilder() to construct.
    private AudioContent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AudioContent() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AudioContent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioContent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioContent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              speechkit.common.v3.Common.AudioContent.class, speechkit.common.v3.Common.AudioContent.Builder.class);
    }

    private int audioSourceCase_ = 0;
    private java.lang.Object audioSource_;
    public enum AudioSourceCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      CONTENT(1),
      AUDIOSOURCE_NOT_SET(0);
      private final int value;
      private AudioSourceCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AudioSourceCase valueOf(int value) {
        return forNumber(value);
      }

      public static AudioSourceCase forNumber(int value) {
        switch (value) {
          case 1: return CONTENT;
          case 0: return AUDIOSOURCE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public AudioSourceCase
    getAudioSourceCase() {
      return AudioSourceCase.forNumber(
          audioSourceCase_);
    }

    public static final int CONTENT_FIELD_NUMBER = 1;
    /**
     * <code>bytes content = 1;</code>
     * @return Whether the content field is set.
     */
    @java.lang.Override
    public boolean hasContent() {
      return audioSourceCase_ == 1;
    }
    /**
     * <code>bytes content = 1;</code>
     * @return The content.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getContent() {
      if (audioSourceCase_ == 1) {
        return (com.google.protobuf.ByteString) audioSource_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int AUDIO_SPEC_FIELD_NUMBER = 2;
    private speechkit.common.v3.Common.AudioFormatOptions audioSpec_;
    /**
     * <pre>
     * Description of the audio format.
     * </pre>
     *
     * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
     * @return Whether the audioSpec field is set.
     */
    @java.lang.Override
    public boolean hasAudioSpec() {
      return audioSpec_ != null;
    }
    /**
     * <pre>
     * Description of the audio format.
     * </pre>
     *
     * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
     * @return The audioSpec.
     */
    @java.lang.Override
    public speechkit.common.v3.Common.AudioFormatOptions getAudioSpec() {
      return audioSpec_ == null ? speechkit.common.v3.Common.AudioFormatOptions.getDefaultInstance() : audioSpec_;
    }
    /**
     * <pre>
     * Description of the audio format.
     * </pre>
     *
     * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
     */
    @java.lang.Override
    public speechkit.common.v3.Common.AudioFormatOptionsOrBuilder getAudioSpecOrBuilder() {
      return getAudioSpec();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (audioSourceCase_ == 1) {
        output.writeBytes(
            1, (com.google.protobuf.ByteString) audioSource_);
      }
      if (audioSpec_ != null) {
        output.writeMessage(2, getAudioSpec());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (audioSourceCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              1, (com.google.protobuf.ByteString) audioSource_);
      }
      if (audioSpec_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAudioSpec());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof speechkit.common.v3.Common.AudioContent)) {
        return super.equals(obj);
      }
      speechkit.common.v3.Common.AudioContent other = (speechkit.common.v3.Common.AudioContent) obj;

      if (hasAudioSpec() != other.hasAudioSpec()) return false;
      if (hasAudioSpec()) {
        if (!getAudioSpec()
            .equals(other.getAudioSpec())) return false;
      }
      if (!getAudioSourceCase().equals(other.getAudioSourceCase())) return false;
      switch (audioSourceCase_) {
        case 1:
          if (!getContent()
              .equals(other.getContent())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAudioSpec()) {
        hash = (37 * hash) + AUDIO_SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getAudioSpec().hashCode();
      }
      switch (audioSourceCase_) {
        case 1:
          hash = (37 * hash) + CONTENT_FIELD_NUMBER;
          hash = (53 * hash) + getContent().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static speechkit.common.v3.Common.AudioContent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.AudioContent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioContent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.AudioContent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioContent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.AudioContent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioContent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.AudioContent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioContent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.AudioContent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioContent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.AudioContent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(speechkit.common.v3.Common.AudioContent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code speechkit.v3.AudioContent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:speechkit.v3.AudioContent)
        speechkit.common.v3.Common.AudioContentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioContent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioContent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                speechkit.common.v3.Common.AudioContent.class, speechkit.common.v3.Common.AudioContent.Builder.class);
      }

      // Construct using speechkit.common.v3.Common.AudioContent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (audioSpecBuilder_ == null) {
          audioSpec_ = null;
        } else {
          audioSpec_ = null;
          audioSpecBuilder_ = null;
        }
        audioSourceCase_ = 0;
        audioSource_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioContent_descriptor;
      }

      @java.lang.Override
      public speechkit.common.v3.Common.AudioContent getDefaultInstanceForType() {
        return speechkit.common.v3.Common.AudioContent.getDefaultInstance();
      }

      @java.lang.Override
      public speechkit.common.v3.Common.AudioContent build() {
        speechkit.common.v3.Common.AudioContent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public speechkit.common.v3.Common.AudioContent buildPartial() {
        speechkit.common.v3.Common.AudioContent result = new speechkit.common.v3.Common.AudioContent(this);
        if (audioSourceCase_ == 1) {
          result.audioSource_ = audioSource_;
        }
        if (audioSpecBuilder_ == null) {
          result.audioSpec_ = audioSpec_;
        } else {
          result.audioSpec_ = audioSpecBuilder_.build();
        }
        result.audioSourceCase_ = audioSourceCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof speechkit.common.v3.Common.AudioContent) {
          return mergeFrom((speechkit.common.v3.Common.AudioContent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(speechkit.common.v3.Common.AudioContent other) {
        if (other == speechkit.common.v3.Common.AudioContent.getDefaultInstance()) return this;
        if (other.hasAudioSpec()) {
          mergeAudioSpec(other.getAudioSpec());
        }
        switch (other.getAudioSourceCase()) {
          case CONTENT: {
            setContent(other.getContent());
            break;
          }
          case AUDIOSOURCE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                audioSource_ = input.readBytes();
                audioSourceCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getAudioSpecFieldBuilder().getBuilder(),
                    extensionRegistry);

                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int audioSourceCase_ = 0;
      private java.lang.Object audioSource_;
      public AudioSourceCase
          getAudioSourceCase() {
        return AudioSourceCase.forNumber(
            audioSourceCase_);
      }

      public Builder clearAudioSource() {
        audioSourceCase_ = 0;
        audioSource_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>bytes content = 1;</code>
       * @return Whether the content field is set.
       */
      public boolean hasContent() {
        return audioSourceCase_ == 1;
      }
      /**
       * <code>bytes content = 1;</code>
       * @return The content.
       */
      public com.google.protobuf.ByteString getContent() {
        if (audioSourceCase_ == 1) {
          return (com.google.protobuf.ByteString) audioSource_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <code>bytes content = 1;</code>
       * @param value The content to set.
       * @return This builder for chaining.
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  audioSourceCase_ = 1;
        audioSource_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes content = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearContent() {
        if (audioSourceCase_ == 1) {
          audioSourceCase_ = 0;
          audioSource_ = null;
          onChanged();
        }
        return this;
      }

      private speechkit.common.v3.Common.AudioFormatOptions audioSpec_;
      private com.google.protobuf.SingleFieldBuilderV3<
          speechkit.common.v3.Common.AudioFormatOptions, speechkit.common.v3.Common.AudioFormatOptions.Builder, speechkit.common.v3.Common.AudioFormatOptionsOrBuilder> audioSpecBuilder_;
      /**
       * <pre>
       * Description of the audio format.
       * </pre>
       *
       * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
       * @return Whether the audioSpec field is set.
       */
      public boolean hasAudioSpec() {
        return audioSpecBuilder_ != null || audioSpec_ != null;
      }
      /**
       * <pre>
       * Description of the audio format.
       * </pre>
       *
       * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
       * @return The audioSpec.
       */
      public speechkit.common.v3.Common.AudioFormatOptions getAudioSpec() {
        if (audioSpecBuilder_ == null) {
          return audioSpec_ == null ? speechkit.common.v3.Common.AudioFormatOptions.getDefaultInstance() : audioSpec_;
        } else {
          return audioSpecBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Description of the audio format.
       * </pre>
       *
       * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
       */
      public Builder setAudioSpec(speechkit.common.v3.Common.AudioFormatOptions value) {
        if (audioSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          audioSpec_ = value;
          onChanged();
        } else {
          audioSpecBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Description of the audio format.
       * </pre>
       *
       * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
       */
      public Builder setAudioSpec(
          speechkit.common.v3.Common.AudioFormatOptions.Builder builderForValue) {
        if (audioSpecBuilder_ == null) {
          audioSpec_ = builderForValue.build();
          onChanged();
        } else {
          audioSpecBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Description of the audio format.
       * </pre>
       *
       * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
       */
      public Builder mergeAudioSpec(speechkit.common.v3.Common.AudioFormatOptions value) {
        if (audioSpecBuilder_ == null) {
          if (audioSpec_ != null) {
            audioSpec_ =
              speechkit.common.v3.Common.AudioFormatOptions.newBuilder(audioSpec_).mergeFrom(value).buildPartial();
          } else {
            audioSpec_ = value;
          }
          onChanged();
        } else {
          audioSpecBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Description of the audio format.
       * </pre>
       *
       * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
       */
      public Builder clearAudioSpec() {
        if (audioSpecBuilder_ == null) {
          audioSpec_ = null;
          onChanged();
        } else {
          audioSpec_ = null;
          audioSpecBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Description of the audio format.
       * </pre>
       *
       * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
       */
      public speechkit.common.v3.Common.AudioFormatOptions.Builder getAudioSpecBuilder() {
        
        onChanged();
        return getAudioSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Description of the audio format.
       * </pre>
       *
       * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
       */
      public speechkit.common.v3.Common.AudioFormatOptionsOrBuilder getAudioSpecOrBuilder() {
        if (audioSpecBuilder_ != null) {
          return audioSpecBuilder_.getMessageOrBuilder();
        } else {
          return audioSpec_ == null ?
              speechkit.common.v3.Common.AudioFormatOptions.getDefaultInstance() : audioSpec_;
        }
      }
      /**
       * <pre>
       * Description of the audio format.
       * </pre>
       *
       * <code>.speechkit.v3.AudioFormatOptions audio_spec = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          speechkit.common.v3.Common.AudioFormatOptions, speechkit.common.v3.Common.AudioFormatOptions.Builder, speechkit.common.v3.Common.AudioFormatOptionsOrBuilder> 
          getAudioSpecFieldBuilder() {
        if (audioSpecBuilder_ == null) {
          audioSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              speechkit.common.v3.Common.AudioFormatOptions, speechkit.common.v3.Common.AudioFormatOptions.Builder, speechkit.common.v3.Common.AudioFormatOptionsOrBuilder>(
                  getAudioSpec(),
                  getParentForChildren(),
                  isClean());
          audioSpec_ = null;
        }
        return audioSpecBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:speechkit.v3.AudioContent)
    }

    // @@protoc_insertion_point(class_scope:speechkit.v3.AudioContent)
    private static final speechkit.common.v3.Common.AudioContent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new speechkit.common.v3.Common.AudioContent();
    }

    public static speechkit.common.v3.Common.AudioContent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AudioContent>
        PARSER = new com.google.protobuf.AbstractParser<AudioContent>() {
      @java.lang.Override
      public AudioContent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AudioContent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AudioContent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public speechkit.common.v3.Common.AudioContent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AudioFormatOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:speechkit.v3.AudioFormatOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The audio format specified in request parameters.
     * </pre>
     *
     * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
     * @return Whether the rawAudio field is set.
     */
    boolean hasRawAudio();
    /**
     * <pre>
     * The audio format specified in request parameters.
     * </pre>
     *
     * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
     * @return The rawAudio.
     */
    speechkit.common.v3.Common.RawAudio getRawAudio();
    /**
     * <pre>
     * The audio format specified in request parameters.
     * </pre>
     *
     * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
     */
    speechkit.common.v3.Common.RawAudioOrBuilder getRawAudioOrBuilder();

    /**
     * <pre>
     * The audio format specified inside the file header.
     * </pre>
     *
     * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
     * @return Whether the containerAudio field is set.
     */
    boolean hasContainerAudio();
    /**
     * <pre>
     * The audio format specified inside the file header.
     * </pre>
     *
     * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
     * @return The containerAudio.
     */
    speechkit.common.v3.Common.ContainerAudio getContainerAudio();
    /**
     * <pre>
     * The audio format specified inside the file header.
     * </pre>
     *
     * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
     */
    speechkit.common.v3.Common.ContainerAudioOrBuilder getContainerAudioOrBuilder();

    public speechkit.common.v3.Common.AudioFormatOptions.AudioFormatCase getAudioFormatCase();
  }
  /**
   * Protobuf type {@code speechkit.v3.AudioFormatOptions}
   */
  public static final class AudioFormatOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:speechkit.v3.AudioFormatOptions)
      AudioFormatOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AudioFormatOptions.newBuilder() to construct.
    private AudioFormatOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AudioFormatOptions() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AudioFormatOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioFormatOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioFormatOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              speechkit.common.v3.Common.AudioFormatOptions.class, speechkit.common.v3.Common.AudioFormatOptions.Builder.class);
    }

    private int audioFormatCase_ = 0;
    private java.lang.Object audioFormat_;
    public enum AudioFormatCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      RAW_AUDIO(1),
      CONTAINER_AUDIO(2),
      AUDIOFORMAT_NOT_SET(0);
      private final int value;
      private AudioFormatCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AudioFormatCase valueOf(int value) {
        return forNumber(value);
      }

      public static AudioFormatCase forNumber(int value) {
        switch (value) {
          case 1: return RAW_AUDIO;
          case 2: return CONTAINER_AUDIO;
          case 0: return AUDIOFORMAT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public AudioFormatCase
    getAudioFormatCase() {
      return AudioFormatCase.forNumber(
          audioFormatCase_);
    }

    public static final int RAW_AUDIO_FIELD_NUMBER = 1;
    /**
     * <pre>
     * The audio format specified in request parameters.
     * </pre>
     *
     * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
     * @return Whether the rawAudio field is set.
     */
    @java.lang.Override
    public boolean hasRawAudio() {
      return audioFormatCase_ == 1;
    }
    /**
     * <pre>
     * The audio format specified in request parameters.
     * </pre>
     *
     * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
     * @return The rawAudio.
     */
    @java.lang.Override
    public speechkit.common.v3.Common.RawAudio getRawAudio() {
      if (audioFormatCase_ == 1) {
         return (speechkit.common.v3.Common.RawAudio) audioFormat_;
      }
      return speechkit.common.v3.Common.RawAudio.getDefaultInstance();
    }
    /**
     * <pre>
     * The audio format specified in request parameters.
     * </pre>
     *
     * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
     */
    @java.lang.Override
    public speechkit.common.v3.Common.RawAudioOrBuilder getRawAudioOrBuilder() {
      if (audioFormatCase_ == 1) {
         return (speechkit.common.v3.Common.RawAudio) audioFormat_;
      }
      return speechkit.common.v3.Common.RawAudio.getDefaultInstance();
    }

    public static final int CONTAINER_AUDIO_FIELD_NUMBER = 2;
    /**
     * <pre>
     * The audio format specified inside the file header.
     * </pre>
     *
     * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
     * @return Whether the containerAudio field is set.
     */
    @java.lang.Override
    public boolean hasContainerAudio() {
      return audioFormatCase_ == 2;
    }
    /**
     * <pre>
     * The audio format specified inside the file header.
     * </pre>
     *
     * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
     * @return The containerAudio.
     */
    @java.lang.Override
    public speechkit.common.v3.Common.ContainerAudio getContainerAudio() {
      if (audioFormatCase_ == 2) {
         return (speechkit.common.v3.Common.ContainerAudio) audioFormat_;
      }
      return speechkit.common.v3.Common.ContainerAudio.getDefaultInstance();
    }
    /**
     * <pre>
     * The audio format specified inside the file header.
     * </pre>
     *
     * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
     */
    @java.lang.Override
    public speechkit.common.v3.Common.ContainerAudioOrBuilder getContainerAudioOrBuilder() {
      if (audioFormatCase_ == 2) {
         return (speechkit.common.v3.Common.ContainerAudio) audioFormat_;
      }
      return speechkit.common.v3.Common.ContainerAudio.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (audioFormatCase_ == 1) {
        output.writeMessage(1, (speechkit.common.v3.Common.RawAudio) audioFormat_);
      }
      if (audioFormatCase_ == 2) {
        output.writeMessage(2, (speechkit.common.v3.Common.ContainerAudio) audioFormat_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (audioFormatCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (speechkit.common.v3.Common.RawAudio) audioFormat_);
      }
      if (audioFormatCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (speechkit.common.v3.Common.ContainerAudio) audioFormat_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof speechkit.common.v3.Common.AudioFormatOptions)) {
        return super.equals(obj);
      }
      speechkit.common.v3.Common.AudioFormatOptions other = (speechkit.common.v3.Common.AudioFormatOptions) obj;

      if (!getAudioFormatCase().equals(other.getAudioFormatCase())) return false;
      switch (audioFormatCase_) {
        case 1:
          if (!getRawAudio()
              .equals(other.getRawAudio())) return false;
          break;
        case 2:
          if (!getContainerAudio()
              .equals(other.getContainerAudio())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (audioFormatCase_) {
        case 1:
          hash = (37 * hash) + RAW_AUDIO_FIELD_NUMBER;
          hash = (53 * hash) + getRawAudio().hashCode();
          break;
        case 2:
          hash = (37 * hash) + CONTAINER_AUDIO_FIELD_NUMBER;
          hash = (53 * hash) + getContainerAudio().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static speechkit.common.v3.Common.AudioFormatOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.AudioFormatOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioFormatOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.AudioFormatOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioFormatOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.AudioFormatOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioFormatOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.AudioFormatOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioFormatOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.AudioFormatOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioFormatOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.AudioFormatOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(speechkit.common.v3.Common.AudioFormatOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code speechkit.v3.AudioFormatOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:speechkit.v3.AudioFormatOptions)
        speechkit.common.v3.Common.AudioFormatOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioFormatOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioFormatOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                speechkit.common.v3.Common.AudioFormatOptions.class, speechkit.common.v3.Common.AudioFormatOptions.Builder.class);
      }

      // Construct using speechkit.common.v3.Common.AudioFormatOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (rawAudioBuilder_ != null) {
          rawAudioBuilder_.clear();
        }
        if (containerAudioBuilder_ != null) {
          containerAudioBuilder_.clear();
        }
        audioFormatCase_ = 0;
        audioFormat_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioFormatOptions_descriptor;
      }

      @java.lang.Override
      public speechkit.common.v3.Common.AudioFormatOptions getDefaultInstanceForType() {
        return speechkit.common.v3.Common.AudioFormatOptions.getDefaultInstance();
      }

      @java.lang.Override
      public speechkit.common.v3.Common.AudioFormatOptions build() {
        speechkit.common.v3.Common.AudioFormatOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public speechkit.common.v3.Common.AudioFormatOptions buildPartial() {
        speechkit.common.v3.Common.AudioFormatOptions result = new speechkit.common.v3.Common.AudioFormatOptions(this);
        if (audioFormatCase_ == 1) {
          if (rawAudioBuilder_ == null) {
            result.audioFormat_ = audioFormat_;
          } else {
            result.audioFormat_ = rawAudioBuilder_.build();
          }
        }
        if (audioFormatCase_ == 2) {
          if (containerAudioBuilder_ == null) {
            result.audioFormat_ = audioFormat_;
          } else {
            result.audioFormat_ = containerAudioBuilder_.build();
          }
        }
        result.audioFormatCase_ = audioFormatCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof speechkit.common.v3.Common.AudioFormatOptions) {
          return mergeFrom((speechkit.common.v3.Common.AudioFormatOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(speechkit.common.v3.Common.AudioFormatOptions other) {
        if (other == speechkit.common.v3.Common.AudioFormatOptions.getDefaultInstance()) return this;
        switch (other.getAudioFormatCase()) {
          case RAW_AUDIO: {
            mergeRawAudio(other.getRawAudio());
            break;
          }
          case CONTAINER_AUDIO: {
            mergeContainerAudio(other.getContainerAudio());
            break;
          }
          case AUDIOFORMAT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getRawAudioFieldBuilder().getBuilder(),
                    extensionRegistry);
                audioFormatCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getContainerAudioFieldBuilder().getBuilder(),
                    extensionRegistry);
                audioFormatCase_ = 2;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int audioFormatCase_ = 0;
      private java.lang.Object audioFormat_;
      public AudioFormatCase
          getAudioFormatCase() {
        return AudioFormatCase.forNumber(
            audioFormatCase_);
      }

      public Builder clearAudioFormat() {
        audioFormatCase_ = 0;
        audioFormat_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          speechkit.common.v3.Common.RawAudio, speechkit.common.v3.Common.RawAudio.Builder, speechkit.common.v3.Common.RawAudioOrBuilder> rawAudioBuilder_;
      /**
       * <pre>
       * The audio format specified in request parameters.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
       * @return Whether the rawAudio field is set.
       */
      @java.lang.Override
      public boolean hasRawAudio() {
        return audioFormatCase_ == 1;
      }
      /**
       * <pre>
       * The audio format specified in request parameters.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
       * @return The rawAudio.
       */
      @java.lang.Override
      public speechkit.common.v3.Common.RawAudio getRawAudio() {
        if (rawAudioBuilder_ == null) {
          if (audioFormatCase_ == 1) {
            return (speechkit.common.v3.Common.RawAudio) audioFormat_;
          }
          return speechkit.common.v3.Common.RawAudio.getDefaultInstance();
        } else {
          if (audioFormatCase_ == 1) {
            return rawAudioBuilder_.getMessage();
          }
          return speechkit.common.v3.Common.RawAudio.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The audio format specified in request parameters.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
       */
      public Builder setRawAudio(speechkit.common.v3.Common.RawAudio value) {
        if (rawAudioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          audioFormat_ = value;
          onChanged();
        } else {
          rawAudioBuilder_.setMessage(value);
        }
        audioFormatCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * The audio format specified in request parameters.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
       */
      public Builder setRawAudio(
          speechkit.common.v3.Common.RawAudio.Builder builderForValue) {
        if (rawAudioBuilder_ == null) {
          audioFormat_ = builderForValue.build();
          onChanged();
        } else {
          rawAudioBuilder_.setMessage(builderForValue.build());
        }
        audioFormatCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * The audio format specified in request parameters.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
       */
      public Builder mergeRawAudio(speechkit.common.v3.Common.RawAudio value) {
        if (rawAudioBuilder_ == null) {
          if (audioFormatCase_ == 1 &&
              audioFormat_ != speechkit.common.v3.Common.RawAudio.getDefaultInstance()) {
            audioFormat_ = speechkit.common.v3.Common.RawAudio.newBuilder((speechkit.common.v3.Common.RawAudio) audioFormat_)
                .mergeFrom(value).buildPartial();
          } else {
            audioFormat_ = value;
          }
          onChanged();
        } else {
          if (audioFormatCase_ == 1) {
            rawAudioBuilder_.mergeFrom(value);
          } else {
            rawAudioBuilder_.setMessage(value);
          }
        }
        audioFormatCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * The audio format specified in request parameters.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
       */
      public Builder clearRawAudio() {
        if (rawAudioBuilder_ == null) {
          if (audioFormatCase_ == 1) {
            audioFormatCase_ = 0;
            audioFormat_ = null;
            onChanged();
          }
        } else {
          if (audioFormatCase_ == 1) {
            audioFormatCase_ = 0;
            audioFormat_ = null;
          }
          rawAudioBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The audio format specified in request parameters.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
       */
      public speechkit.common.v3.Common.RawAudio.Builder getRawAudioBuilder() {
        return getRawAudioFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The audio format specified in request parameters.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
       */
      @java.lang.Override
      public speechkit.common.v3.Common.RawAudioOrBuilder getRawAudioOrBuilder() {
        if ((audioFormatCase_ == 1) && (rawAudioBuilder_ != null)) {
          return rawAudioBuilder_.getMessageOrBuilder();
        } else {
          if (audioFormatCase_ == 1) {
            return (speechkit.common.v3.Common.RawAudio) audioFormat_;
          }
          return speechkit.common.v3.Common.RawAudio.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The audio format specified in request parameters.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio raw_audio = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          speechkit.common.v3.Common.RawAudio, speechkit.common.v3.Common.RawAudio.Builder, speechkit.common.v3.Common.RawAudioOrBuilder> 
          getRawAudioFieldBuilder() {
        if (rawAudioBuilder_ == null) {
          if (!(audioFormatCase_ == 1)) {
            audioFormat_ = speechkit.common.v3.Common.RawAudio.getDefaultInstance();
          }
          rawAudioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              speechkit.common.v3.Common.RawAudio, speechkit.common.v3.Common.RawAudio.Builder, speechkit.common.v3.Common.RawAudioOrBuilder>(
                  (speechkit.common.v3.Common.RawAudio) audioFormat_,
                  getParentForChildren(),
                  isClean());
          audioFormat_ = null;
        }
        audioFormatCase_ = 1;
        onChanged();;
        return rawAudioBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          speechkit.common.v3.Common.ContainerAudio, speechkit.common.v3.Common.ContainerAudio.Builder, speechkit.common.v3.Common.ContainerAudioOrBuilder> containerAudioBuilder_;
      /**
       * <pre>
       * The audio format specified inside the file header.
       * </pre>
       *
       * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
       * @return Whether the containerAudio field is set.
       */
      @java.lang.Override
      public boolean hasContainerAudio() {
        return audioFormatCase_ == 2;
      }
      /**
       * <pre>
       * The audio format specified inside the file header.
       * </pre>
       *
       * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
       * @return The containerAudio.
       */
      @java.lang.Override
      public speechkit.common.v3.Common.ContainerAudio getContainerAudio() {
        if (containerAudioBuilder_ == null) {
          if (audioFormatCase_ == 2) {
            return (speechkit.common.v3.Common.ContainerAudio) audioFormat_;
          }
          return speechkit.common.v3.Common.ContainerAudio.getDefaultInstance();
        } else {
          if (audioFormatCase_ == 2) {
            return containerAudioBuilder_.getMessage();
          }
          return speechkit.common.v3.Common.ContainerAudio.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The audio format specified inside the file header.
       * </pre>
       *
       * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
       */
      public Builder setContainerAudio(speechkit.common.v3.Common.ContainerAudio value) {
        if (containerAudioBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          audioFormat_ = value;
          onChanged();
        } else {
          containerAudioBuilder_.setMessage(value);
        }
        audioFormatCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * The audio format specified inside the file header.
       * </pre>
       *
       * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
       */
      public Builder setContainerAudio(
          speechkit.common.v3.Common.ContainerAudio.Builder builderForValue) {
        if (containerAudioBuilder_ == null) {
          audioFormat_ = builderForValue.build();
          onChanged();
        } else {
          containerAudioBuilder_.setMessage(builderForValue.build());
        }
        audioFormatCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * The audio format specified inside the file header.
       * </pre>
       *
       * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
       */
      public Builder mergeContainerAudio(speechkit.common.v3.Common.ContainerAudio value) {
        if (containerAudioBuilder_ == null) {
          if (audioFormatCase_ == 2 &&
              audioFormat_ != speechkit.common.v3.Common.ContainerAudio.getDefaultInstance()) {
            audioFormat_ = speechkit.common.v3.Common.ContainerAudio.newBuilder((speechkit.common.v3.Common.ContainerAudio) audioFormat_)
                .mergeFrom(value).buildPartial();
          } else {
            audioFormat_ = value;
          }
          onChanged();
        } else {
          if (audioFormatCase_ == 2) {
            containerAudioBuilder_.mergeFrom(value);
          } else {
            containerAudioBuilder_.setMessage(value);
          }
        }
        audioFormatCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * The audio format specified inside the file header.
       * </pre>
       *
       * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
       */
      public Builder clearContainerAudio() {
        if (containerAudioBuilder_ == null) {
          if (audioFormatCase_ == 2) {
            audioFormatCase_ = 0;
            audioFormat_ = null;
            onChanged();
          }
        } else {
          if (audioFormatCase_ == 2) {
            audioFormatCase_ = 0;
            audioFormat_ = null;
          }
          containerAudioBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The audio format specified inside the file header.
       * </pre>
       *
       * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
       */
      public speechkit.common.v3.Common.ContainerAudio.Builder getContainerAudioBuilder() {
        return getContainerAudioFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The audio format specified inside the file header.
       * </pre>
       *
       * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
       */
      @java.lang.Override
      public speechkit.common.v3.Common.ContainerAudioOrBuilder getContainerAudioOrBuilder() {
        if ((audioFormatCase_ == 2) && (containerAudioBuilder_ != null)) {
          return containerAudioBuilder_.getMessageOrBuilder();
        } else {
          if (audioFormatCase_ == 2) {
            return (speechkit.common.v3.Common.ContainerAudio) audioFormat_;
          }
          return speechkit.common.v3.Common.ContainerAudio.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The audio format specified inside the file header.
       * </pre>
       *
       * <code>.speechkit.v3.ContainerAudio container_audio = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          speechkit.common.v3.Common.ContainerAudio, speechkit.common.v3.Common.ContainerAudio.Builder, speechkit.common.v3.Common.ContainerAudioOrBuilder> 
          getContainerAudioFieldBuilder() {
        if (containerAudioBuilder_ == null) {
          if (!(audioFormatCase_ == 2)) {
            audioFormat_ = speechkit.common.v3.Common.ContainerAudio.getDefaultInstance();
          }
          containerAudioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              speechkit.common.v3.Common.ContainerAudio, speechkit.common.v3.Common.ContainerAudio.Builder, speechkit.common.v3.Common.ContainerAudioOrBuilder>(
                  (speechkit.common.v3.Common.ContainerAudio) audioFormat_,
                  getParentForChildren(),
                  isClean());
          audioFormat_ = null;
        }
        audioFormatCase_ = 2;
        onChanged();;
        return containerAudioBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:speechkit.v3.AudioFormatOptions)
    }

    // @@protoc_insertion_point(class_scope:speechkit.v3.AudioFormatOptions)
    private static final speechkit.common.v3.Common.AudioFormatOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new speechkit.common.v3.Common.AudioFormatOptions();
    }

    public static speechkit.common.v3.Common.AudioFormatOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AudioFormatOptions>
        PARSER = new com.google.protobuf.AbstractParser<AudioFormatOptions>() {
      @java.lang.Override
      public AudioFormatOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AudioFormatOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AudioFormatOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public speechkit.common.v3.Common.AudioFormatOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RawAudioOrBuilder extends
      // @@protoc_insertion_point(interface_extends:speechkit.v3.RawAudio)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Encoding type.
     * </pre>
     *
     * <code>.speechkit.v3.RawAudio.AudioEncoding audio_encoding = 1;</code>
     * @return The enum numeric value on the wire for audioEncoding.
     */
    int getAudioEncodingValue();
    /**
     * <pre>
     * Encoding type.
     * </pre>
     *
     * <code>.speechkit.v3.RawAudio.AudioEncoding audio_encoding = 1;</code>
     * @return The audioEncoding.
     */
    speechkit.common.v3.Common.RawAudio.AudioEncoding getAudioEncoding();

    /**
     * <pre>
     * Sampling frequency of the signal.
     * </pre>
     *
     * <code>int64 sample_rate_hertz = 2;</code>
     * @return The sampleRateHertz.
     */
    long getSampleRateHertz();

    /**
     * <code>int64 audio_channel_count = 3;</code>
     * @return The audioChannelCount.
     */
    long getAudioChannelCount();
  }
  /**
   * Protobuf type {@code speechkit.v3.RawAudio}
   */
  public static final class RawAudio extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:speechkit.v3.RawAudio)
      RawAudioOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RawAudio.newBuilder() to construct.
    private RawAudio(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RawAudio() {
      audioEncoding_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RawAudio();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return speechkit.common.v3.Common.internal_static_speechkit_v3_RawAudio_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return speechkit.common.v3.Common.internal_static_speechkit_v3_RawAudio_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              speechkit.common.v3.Common.RawAudio.class, speechkit.common.v3.Common.RawAudio.Builder.class);
    }

    /**
     * Protobuf enum {@code speechkit.v3.RawAudio.AudioEncoding}
     */
    public enum AudioEncoding
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>AUDIO_ENCODING_UNSPECIFIED = 0;</code>
       */
      AUDIO_ENCODING_UNSPECIFIED(0),
      /**
       * <pre>
       * 16-bit signed little-endian (Linear PCM)
       * </pre>
       *
       * <code>LINEAR16_PCM = 1;</code>
       */
      LINEAR16_PCM(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>AUDIO_ENCODING_UNSPECIFIED = 0;</code>
       */
      public static final int AUDIO_ENCODING_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * 16-bit signed little-endian (Linear PCM)
       * </pre>
       *
       * <code>LINEAR16_PCM = 1;</code>
       */
      public static final int LINEAR16_PCM_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static AudioEncoding valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static AudioEncoding forNumber(int value) {
        switch (value) {
          case 0: return AUDIO_ENCODING_UNSPECIFIED;
          case 1: return LINEAR16_PCM;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AudioEncoding>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AudioEncoding> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AudioEncoding>() {
              public AudioEncoding findValueByNumber(int number) {
                return AudioEncoding.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return speechkit.common.v3.Common.RawAudio.getDescriptor().getEnumTypes().get(0);
      }

      private static final AudioEncoding[] VALUES = values();

      public static AudioEncoding valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private AudioEncoding(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:speechkit.v3.RawAudio.AudioEncoding)
    }

    public static final int AUDIO_ENCODING_FIELD_NUMBER = 1;
    private int audioEncoding_;
    /**
     * <pre>
     * Encoding type.
     * </pre>
     *
     * <code>.speechkit.v3.RawAudio.AudioEncoding audio_encoding = 1;</code>
     * @return The enum numeric value on the wire for audioEncoding.
     */
    @java.lang.Override public int getAudioEncodingValue() {
      return audioEncoding_;
    }
    /**
     * <pre>
     * Encoding type.
     * </pre>
     *
     * <code>.speechkit.v3.RawAudio.AudioEncoding audio_encoding = 1;</code>
     * @return The audioEncoding.
     */
    @java.lang.Override public speechkit.common.v3.Common.RawAudio.AudioEncoding getAudioEncoding() {
      @SuppressWarnings("deprecation")
      speechkit.common.v3.Common.RawAudio.AudioEncoding result = speechkit.common.v3.Common.RawAudio.AudioEncoding.valueOf(audioEncoding_);
      return result == null ? speechkit.common.v3.Common.RawAudio.AudioEncoding.UNRECOGNIZED : result;
    }

    public static final int SAMPLE_RATE_HERTZ_FIELD_NUMBER = 2;
    private long sampleRateHertz_;
    /**
     * <pre>
     * Sampling frequency of the signal.
     * </pre>
     *
     * <code>int64 sample_rate_hertz = 2;</code>
     * @return The sampleRateHertz.
     */
    @java.lang.Override
    public long getSampleRateHertz() {
      return sampleRateHertz_;
    }

    public static final int AUDIO_CHANNEL_COUNT_FIELD_NUMBER = 3;
    private long audioChannelCount_;
    /**
     * <code>int64 audio_channel_count = 3;</code>
     * @return The audioChannelCount.
     */
    @java.lang.Override
    public long getAudioChannelCount() {
      return audioChannelCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (audioEncoding_ != speechkit.common.v3.Common.RawAudio.AudioEncoding.AUDIO_ENCODING_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, audioEncoding_);
      }
      if (sampleRateHertz_ != 0L) {
        output.writeInt64(2, sampleRateHertz_);
      }
      if (audioChannelCount_ != 0L) {
        output.writeInt64(3, audioChannelCount_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (audioEncoding_ != speechkit.common.v3.Common.RawAudio.AudioEncoding.AUDIO_ENCODING_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, audioEncoding_);
      }
      if (sampleRateHertz_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, sampleRateHertz_);
      }
      if (audioChannelCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, audioChannelCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof speechkit.common.v3.Common.RawAudio)) {
        return super.equals(obj);
      }
      speechkit.common.v3.Common.RawAudio other = (speechkit.common.v3.Common.RawAudio) obj;

      if (audioEncoding_ != other.audioEncoding_) return false;
      if (getSampleRateHertz()
          != other.getSampleRateHertz()) return false;
      if (getAudioChannelCount()
          != other.getAudioChannelCount()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AUDIO_ENCODING_FIELD_NUMBER;
      hash = (53 * hash) + audioEncoding_;
      hash = (37 * hash) + SAMPLE_RATE_HERTZ_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSampleRateHertz());
      hash = (37 * hash) + AUDIO_CHANNEL_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAudioChannelCount());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static speechkit.common.v3.Common.RawAudio parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.RawAudio parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.RawAudio parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.RawAudio parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.RawAudio parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.RawAudio parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.RawAudio parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.RawAudio parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static speechkit.common.v3.Common.RawAudio parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.RawAudio parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static speechkit.common.v3.Common.RawAudio parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.RawAudio parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(speechkit.common.v3.Common.RawAudio prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code speechkit.v3.RawAudio}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:speechkit.v3.RawAudio)
        speechkit.common.v3.Common.RawAudioOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_RawAudio_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_RawAudio_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                speechkit.common.v3.Common.RawAudio.class, speechkit.common.v3.Common.RawAudio.Builder.class);
      }

      // Construct using speechkit.common.v3.Common.RawAudio.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        audioEncoding_ = 0;

        sampleRateHertz_ = 0L;

        audioChannelCount_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_RawAudio_descriptor;
      }

      @java.lang.Override
      public speechkit.common.v3.Common.RawAudio getDefaultInstanceForType() {
        return speechkit.common.v3.Common.RawAudio.getDefaultInstance();
      }

      @java.lang.Override
      public speechkit.common.v3.Common.RawAudio build() {
        speechkit.common.v3.Common.RawAudio result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public speechkit.common.v3.Common.RawAudio buildPartial() {
        speechkit.common.v3.Common.RawAudio result = new speechkit.common.v3.Common.RawAudio(this);
        result.audioEncoding_ = audioEncoding_;
        result.sampleRateHertz_ = sampleRateHertz_;
        result.audioChannelCount_ = audioChannelCount_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof speechkit.common.v3.Common.RawAudio) {
          return mergeFrom((speechkit.common.v3.Common.RawAudio)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(speechkit.common.v3.Common.RawAudio other) {
        if (other == speechkit.common.v3.Common.RawAudio.getDefaultInstance()) return this;
        if (other.audioEncoding_ != 0) {
          setAudioEncodingValue(other.getAudioEncodingValue());
        }
        if (other.getSampleRateHertz() != 0L) {
          setSampleRateHertz(other.getSampleRateHertz());
        }
        if (other.getAudioChannelCount() != 0L) {
          setAudioChannelCount(other.getAudioChannelCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                audioEncoding_ = input.readEnum();

                break;
              } // case 8
              case 16: {
                sampleRateHertz_ = input.readInt64();

                break;
              } // case 16
              case 24: {
                audioChannelCount_ = input.readInt64();

                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int audioEncoding_ = 0;
      /**
       * <pre>
       * Encoding type.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio.AudioEncoding audio_encoding = 1;</code>
       * @return The enum numeric value on the wire for audioEncoding.
       */
      @java.lang.Override public int getAudioEncodingValue() {
        return audioEncoding_;
      }
      /**
       * <pre>
       * Encoding type.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio.AudioEncoding audio_encoding = 1;</code>
       * @param value The enum numeric value on the wire for audioEncoding to set.
       * @return This builder for chaining.
       */
      public Builder setAudioEncodingValue(int value) {
        
        audioEncoding_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Encoding type.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio.AudioEncoding audio_encoding = 1;</code>
       * @return The audioEncoding.
       */
      @java.lang.Override
      public speechkit.common.v3.Common.RawAudio.AudioEncoding getAudioEncoding() {
        @SuppressWarnings("deprecation")
        speechkit.common.v3.Common.RawAudio.AudioEncoding result = speechkit.common.v3.Common.RawAudio.AudioEncoding.valueOf(audioEncoding_);
        return result == null ? speechkit.common.v3.Common.RawAudio.AudioEncoding.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Encoding type.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio.AudioEncoding audio_encoding = 1;</code>
       * @param value The audioEncoding to set.
       * @return This builder for chaining.
       */
      public Builder setAudioEncoding(speechkit.common.v3.Common.RawAudio.AudioEncoding value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        audioEncoding_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Encoding type.
       * </pre>
       *
       * <code>.speechkit.v3.RawAudio.AudioEncoding audio_encoding = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAudioEncoding() {
        
        audioEncoding_ = 0;
        onChanged();
        return this;
      }

      private long sampleRateHertz_ ;
      /**
       * <pre>
       * Sampling frequency of the signal.
       * </pre>
       *
       * <code>int64 sample_rate_hertz = 2;</code>
       * @return The sampleRateHertz.
       */
      @java.lang.Override
      public long getSampleRateHertz() {
        return sampleRateHertz_;
      }
      /**
       * <pre>
       * Sampling frequency of the signal.
       * </pre>
       *
       * <code>int64 sample_rate_hertz = 2;</code>
       * @param value The sampleRateHertz to set.
       * @return This builder for chaining.
       */
      public Builder setSampleRateHertz(long value) {
        
        sampleRateHertz_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sampling frequency of the signal.
       * </pre>
       *
       * <code>int64 sample_rate_hertz = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSampleRateHertz() {
        
        sampleRateHertz_ = 0L;
        onChanged();
        return this;
      }

      private long audioChannelCount_ ;
      /**
       * <code>int64 audio_channel_count = 3;</code>
       * @return The audioChannelCount.
       */
      @java.lang.Override
      public long getAudioChannelCount() {
        return audioChannelCount_;
      }
      /**
       * <code>int64 audio_channel_count = 3;</code>
       * @param value The audioChannelCount to set.
       * @return This builder for chaining.
       */
      public Builder setAudioChannelCount(long value) {
        
        audioChannelCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 audio_channel_count = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearAudioChannelCount() {
        
        audioChannelCount_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:speechkit.v3.RawAudio)
    }

    // @@protoc_insertion_point(class_scope:speechkit.v3.RawAudio)
    private static final speechkit.common.v3.Common.RawAudio DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new speechkit.common.v3.Common.RawAudio();
    }

    public static speechkit.common.v3.Common.RawAudio getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RawAudio>
        PARSER = new com.google.protobuf.AbstractParser<RawAudio>() {
      @java.lang.Override
      public RawAudio parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RawAudio> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RawAudio> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public speechkit.common.v3.Common.RawAudio getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ContainerAudioOrBuilder extends
      // @@protoc_insertion_point(interface_extends:speechkit.v3.ContainerAudio)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.speechkit.v3.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
     * @return The enum numeric value on the wire for containerAudioType.
     */
    int getContainerAudioTypeValue();
    /**
     * <code>.speechkit.v3.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
     * @return The containerAudioType.
     */
    speechkit.common.v3.Common.ContainerAudio.ContainerAudioType getContainerAudioType();
  }
  /**
   * Protobuf type {@code speechkit.v3.ContainerAudio}
   */
  public static final class ContainerAudio extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:speechkit.v3.ContainerAudio)
      ContainerAudioOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ContainerAudio.newBuilder() to construct.
    private ContainerAudio(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ContainerAudio() {
      containerAudioType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ContainerAudio();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return speechkit.common.v3.Common.internal_static_speechkit_v3_ContainerAudio_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return speechkit.common.v3.Common.internal_static_speechkit_v3_ContainerAudio_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              speechkit.common.v3.Common.ContainerAudio.class, speechkit.common.v3.Common.ContainerAudio.Builder.class);
    }

    /**
     * Protobuf enum {@code speechkit.v3.ContainerAudio.ContainerAudioType}
     */
    public enum ContainerAudioType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CONTAINER_AUDIO_TYPE_UNSPECIFIED = 0;</code>
       */
      CONTAINER_AUDIO_TYPE_UNSPECIFIED(0),
      /**
       * <pre>
       * RIFF linear pcm with header audio file format.
       * </pre>
       *
       * <code>WAV = 1;</code>
       */
      WAV(1),
      /**
       * <code>OGG_OPUS = 2;</code>
       */
      OGG_OPUS(2),
      /**
       * <code>MP3 = 3;</code>
       */
      MP3(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>CONTAINER_AUDIO_TYPE_UNSPECIFIED = 0;</code>
       */
      public static final int CONTAINER_AUDIO_TYPE_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * RIFF linear pcm with header audio file format.
       * </pre>
       *
       * <code>WAV = 1;</code>
       */
      public static final int WAV_VALUE = 1;
      /**
       * <code>OGG_OPUS = 2;</code>
       */
      public static final int OGG_OPUS_VALUE = 2;
      /**
       * <code>MP3 = 3;</code>
       */
      public static final int MP3_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ContainerAudioType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ContainerAudioType forNumber(int value) {
        switch (value) {
          case 0: return CONTAINER_AUDIO_TYPE_UNSPECIFIED;
          case 1: return WAV;
          case 2: return OGG_OPUS;
          case 3: return MP3;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ContainerAudioType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ContainerAudioType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ContainerAudioType>() {
              public ContainerAudioType findValueByNumber(int number) {
                return ContainerAudioType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return speechkit.common.v3.Common.ContainerAudio.getDescriptor().getEnumTypes().get(0);
      }

      private static final ContainerAudioType[] VALUES = values();

      public static ContainerAudioType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ContainerAudioType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:speechkit.v3.ContainerAudio.ContainerAudioType)
    }

    public static final int CONTAINER_AUDIO_TYPE_FIELD_NUMBER = 1;
    private int containerAudioType_;
    /**
     * <code>.speechkit.v3.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
     * @return The enum numeric value on the wire for containerAudioType.
     */
    @java.lang.Override public int getContainerAudioTypeValue() {
      return containerAudioType_;
    }
    /**
     * <code>.speechkit.v3.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
     * @return The containerAudioType.
     */
    @java.lang.Override public speechkit.common.v3.Common.ContainerAudio.ContainerAudioType getContainerAudioType() {
      @SuppressWarnings("deprecation")
      speechkit.common.v3.Common.ContainerAudio.ContainerAudioType result = speechkit.common.v3.Common.ContainerAudio.ContainerAudioType.valueOf(containerAudioType_);
      return result == null ? speechkit.common.v3.Common.ContainerAudio.ContainerAudioType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (containerAudioType_ != speechkit.common.v3.Common.ContainerAudio.ContainerAudioType.CONTAINER_AUDIO_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(1, containerAudioType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (containerAudioType_ != speechkit.common.v3.Common.ContainerAudio.ContainerAudioType.CONTAINER_AUDIO_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, containerAudioType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof speechkit.common.v3.Common.ContainerAudio)) {
        return super.equals(obj);
      }
      speechkit.common.v3.Common.ContainerAudio other = (speechkit.common.v3.Common.ContainerAudio) obj;

      if (containerAudioType_ != other.containerAudioType_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONTAINER_AUDIO_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + containerAudioType_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static speechkit.common.v3.Common.ContainerAudio parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.ContainerAudio parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.ContainerAudio parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.ContainerAudio parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.ContainerAudio parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.ContainerAudio parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.ContainerAudio parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.ContainerAudio parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static speechkit.common.v3.Common.ContainerAudio parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.ContainerAudio parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static speechkit.common.v3.Common.ContainerAudio parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.ContainerAudio parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(speechkit.common.v3.Common.ContainerAudio prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code speechkit.v3.ContainerAudio}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:speechkit.v3.ContainerAudio)
        speechkit.common.v3.Common.ContainerAudioOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_ContainerAudio_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_ContainerAudio_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                speechkit.common.v3.Common.ContainerAudio.class, speechkit.common.v3.Common.ContainerAudio.Builder.class);
      }

      // Construct using speechkit.common.v3.Common.ContainerAudio.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        containerAudioType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_ContainerAudio_descriptor;
      }

      @java.lang.Override
      public speechkit.common.v3.Common.ContainerAudio getDefaultInstanceForType() {
        return speechkit.common.v3.Common.ContainerAudio.getDefaultInstance();
      }

      @java.lang.Override
      public speechkit.common.v3.Common.ContainerAudio build() {
        speechkit.common.v3.Common.ContainerAudio result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public speechkit.common.v3.Common.ContainerAudio buildPartial() {
        speechkit.common.v3.Common.ContainerAudio result = new speechkit.common.v3.Common.ContainerAudio(this);
        result.containerAudioType_ = containerAudioType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof speechkit.common.v3.Common.ContainerAudio) {
          return mergeFrom((speechkit.common.v3.Common.ContainerAudio)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(speechkit.common.v3.Common.ContainerAudio other) {
        if (other == speechkit.common.v3.Common.ContainerAudio.getDefaultInstance()) return this;
        if (other.containerAudioType_ != 0) {
          setContainerAudioTypeValue(other.getContainerAudioTypeValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                containerAudioType_ = input.readEnum();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private int containerAudioType_ = 0;
      /**
       * <code>.speechkit.v3.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
       * @return The enum numeric value on the wire for containerAudioType.
       */
      @java.lang.Override public int getContainerAudioTypeValue() {
        return containerAudioType_;
      }
      /**
       * <code>.speechkit.v3.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
       * @param value The enum numeric value on the wire for containerAudioType to set.
       * @return This builder for chaining.
       */
      public Builder setContainerAudioTypeValue(int value) {
        
        containerAudioType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.speechkit.v3.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
       * @return The containerAudioType.
       */
      @java.lang.Override
      public speechkit.common.v3.Common.ContainerAudio.ContainerAudioType getContainerAudioType() {
        @SuppressWarnings("deprecation")
        speechkit.common.v3.Common.ContainerAudio.ContainerAudioType result = speechkit.common.v3.Common.ContainerAudio.ContainerAudioType.valueOf(containerAudioType_);
        return result == null ? speechkit.common.v3.Common.ContainerAudio.ContainerAudioType.UNRECOGNIZED : result;
      }
      /**
       * <code>.speechkit.v3.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
       * @param value The containerAudioType to set.
       * @return This builder for chaining.
       */
      public Builder setContainerAudioType(speechkit.common.v3.Common.ContainerAudio.ContainerAudioType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        containerAudioType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.speechkit.v3.ContainerAudio.ContainerAudioType container_audio_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearContainerAudioType() {
        
        containerAudioType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:speechkit.v3.ContainerAudio)
    }

    // @@protoc_insertion_point(class_scope:speechkit.v3.ContainerAudio)
    private static final speechkit.common.v3.Common.ContainerAudio DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new speechkit.common.v3.Common.ContainerAudio();
    }

    public static speechkit.common.v3.Common.ContainerAudio getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ContainerAudio>
        PARSER = new com.google.protobuf.AbstractParser<ContainerAudio>() {
      @java.lang.Override
      public ContainerAudio parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ContainerAudio> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ContainerAudio> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public speechkit.common.v3.Common.ContainerAudio getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AudioChunkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:speechkit.v3.AudioChunk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * sequence of bytes with audio data
     * </pre>
     *
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code speechkit.v3.AudioChunk}
   */
  public static final class AudioChunk extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:speechkit.v3.AudioChunk)
      AudioChunkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AudioChunk.newBuilder() to construct.
    private AudioChunk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AudioChunk() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AudioChunk();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioChunk_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioChunk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              speechkit.common.v3.Common.AudioChunk.class, speechkit.common.v3.Common.AudioChunk.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * sequence of bytes with audio data
     * </pre>
     *
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!data_.isEmpty()) {
        output.writeBytes(1, data_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof speechkit.common.v3.Common.AudioChunk)) {
        return super.equals(obj);
      }
      speechkit.common.v3.Common.AudioChunk other = (speechkit.common.v3.Common.AudioChunk) obj;

      if (!getData()
          .equals(other.getData())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static speechkit.common.v3.Common.AudioChunk parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.AudioChunk parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioChunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.AudioChunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioChunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.AudioChunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioChunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.AudioChunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioChunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.AudioChunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static speechkit.common.v3.Common.AudioChunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.AudioChunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(speechkit.common.v3.Common.AudioChunk prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code speechkit.v3.AudioChunk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:speechkit.v3.AudioChunk)
        speechkit.common.v3.Common.AudioChunkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioChunk_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioChunk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                speechkit.common.v3.Common.AudioChunk.class, speechkit.common.v3.Common.AudioChunk.Builder.class);
      }

      // Construct using speechkit.common.v3.Common.AudioChunk.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_AudioChunk_descriptor;
      }

      @java.lang.Override
      public speechkit.common.v3.Common.AudioChunk getDefaultInstanceForType() {
        return speechkit.common.v3.Common.AudioChunk.getDefaultInstance();
      }

      @java.lang.Override
      public speechkit.common.v3.Common.AudioChunk build() {
        speechkit.common.v3.Common.AudioChunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public speechkit.common.v3.Common.AudioChunk buildPartial() {
        speechkit.common.v3.Common.AudioChunk result = new speechkit.common.v3.Common.AudioChunk(this);
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof speechkit.common.v3.Common.AudioChunk) {
          return mergeFrom((speechkit.common.v3.Common.AudioChunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(speechkit.common.v3.Common.AudioChunk other) {
        if (other == speechkit.common.v3.Common.AudioChunk.getDefaultInstance()) return this;
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                data_ = input.readBytes();

                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * sequence of bytes with audio data
       * </pre>
       *
       * <code>bytes data = 1;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * sequence of bytes with audio data
       * </pre>
       *
       * <code>bytes data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * sequence of bytes with audio data
       * </pre>
       *
       * <code>bytes data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:speechkit.v3.AudioChunk)
    }

    // @@protoc_insertion_point(class_scope:speechkit.v3.AudioChunk)
    private static final speechkit.common.v3.Common.AudioChunk DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new speechkit.common.v3.Common.AudioChunk();
    }

    public static speechkit.common.v3.Common.AudioChunk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AudioChunk>
        PARSER = new com.google.protobuf.AbstractParser<AudioChunk>() {
      @java.lang.Override
      public AudioChunk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AudioChunk> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AudioChunk> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public speechkit.common.v3.Common.AudioChunk getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SilenceChunkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:speechkit.v3.SilenceChunk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 duration_ms = 1;</code>
     * @return The durationMs.
     */
    long getDurationMs();
  }
  /**
   * Protobuf type {@code speechkit.v3.SilenceChunk}
   */
  public static final class SilenceChunk extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:speechkit.v3.SilenceChunk)
      SilenceChunkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SilenceChunk.newBuilder() to construct.
    private SilenceChunk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SilenceChunk() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SilenceChunk();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return speechkit.common.v3.Common.internal_static_speechkit_v3_SilenceChunk_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return speechkit.common.v3.Common.internal_static_speechkit_v3_SilenceChunk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              speechkit.common.v3.Common.SilenceChunk.class, speechkit.common.v3.Common.SilenceChunk.Builder.class);
    }

    public static final int DURATION_MS_FIELD_NUMBER = 1;
    private long durationMs_;
    /**
     * <code>int64 duration_ms = 1;</code>
     * @return The durationMs.
     */
    @java.lang.Override
    public long getDurationMs() {
      return durationMs_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (durationMs_ != 0L) {
        output.writeInt64(1, durationMs_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (durationMs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, durationMs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof speechkit.common.v3.Common.SilenceChunk)) {
        return super.equals(obj);
      }
      speechkit.common.v3.Common.SilenceChunk other = (speechkit.common.v3.Common.SilenceChunk) obj;

      if (getDurationMs()
          != other.getDurationMs()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DURATION_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDurationMs());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static speechkit.common.v3.Common.SilenceChunk parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.SilenceChunk parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.SilenceChunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.SilenceChunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.SilenceChunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static speechkit.common.v3.Common.SilenceChunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static speechkit.common.v3.Common.SilenceChunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.SilenceChunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static speechkit.common.v3.Common.SilenceChunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.SilenceChunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static speechkit.common.v3.Common.SilenceChunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static speechkit.common.v3.Common.SilenceChunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(speechkit.common.v3.Common.SilenceChunk prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code speechkit.v3.SilenceChunk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:speechkit.v3.SilenceChunk)
        speechkit.common.v3.Common.SilenceChunkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_SilenceChunk_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_SilenceChunk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                speechkit.common.v3.Common.SilenceChunk.class, speechkit.common.v3.Common.SilenceChunk.Builder.class);
      }

      // Construct using speechkit.common.v3.Common.SilenceChunk.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        durationMs_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return speechkit.common.v3.Common.internal_static_speechkit_v3_SilenceChunk_descriptor;
      }

      @java.lang.Override
      public speechkit.common.v3.Common.SilenceChunk getDefaultInstanceForType() {
        return speechkit.common.v3.Common.SilenceChunk.getDefaultInstance();
      }

      @java.lang.Override
      public speechkit.common.v3.Common.SilenceChunk build() {
        speechkit.common.v3.Common.SilenceChunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public speechkit.common.v3.Common.SilenceChunk buildPartial() {
        speechkit.common.v3.Common.SilenceChunk result = new speechkit.common.v3.Common.SilenceChunk(this);
        result.durationMs_ = durationMs_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof speechkit.common.v3.Common.SilenceChunk) {
          return mergeFrom((speechkit.common.v3.Common.SilenceChunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(speechkit.common.v3.Common.SilenceChunk other) {
        if (other == speechkit.common.v3.Common.SilenceChunk.getDefaultInstance()) return this;
        if (other.getDurationMs() != 0L) {
          setDurationMs(other.getDurationMs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                durationMs_ = input.readInt64();

                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private long durationMs_ ;
      /**
       * <code>int64 duration_ms = 1;</code>
       * @return The durationMs.
       */
      @java.lang.Override
      public long getDurationMs() {
        return durationMs_;
      }
      /**
       * <code>int64 duration_ms = 1;</code>
       * @param value The durationMs to set.
       * @return This builder for chaining.
       */
      public Builder setDurationMs(long value) {
        
        durationMs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 duration_ms = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDurationMs() {
        
        durationMs_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:speechkit.v3.SilenceChunk)
    }

    // @@protoc_insertion_point(class_scope:speechkit.v3.SilenceChunk)
    private static final speechkit.common.v3.Common.SilenceChunk DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new speechkit.common.v3.Common.SilenceChunk();
    }

    public static speechkit.common.v3.Common.SilenceChunk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SilenceChunk>
        PARSER = new com.google.protobuf.AbstractParser<SilenceChunk>() {
      @java.lang.Override
      public SilenceChunk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SilenceChunk> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SilenceChunk> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public speechkit.common.v3.Common.SilenceChunk getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speechkit_v3_AudioContent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speechkit_v3_AudioContent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speechkit_v3_AudioFormatOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speechkit_v3_AudioFormatOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speechkit_v3_RawAudio_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speechkit_v3_RawAudio_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speechkit_v3_ContainerAudio_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speechkit_v3_ContainerAudio_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speechkit_v3_AudioChunk_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speechkit_v3_AudioChunk_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_speechkit_v3_SilenceChunk_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_speechkit_v3_SilenceChunk_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031speechkit/v3/common.proto\022\014speechkit.v" +
      "3\"f\n\014AudioContent\022\021\n\007content\030\001 \001(\014H\000\0224\n\n" +
      "audio_spec\030\002 \001(\0132 .speechkit.v3.AudioFor" +
      "matOptionsB\r\n\013AudioSource\"\211\001\n\022AudioForma" +
      "tOptions\022+\n\traw_audio\030\001 \001(\0132\026.speechkit." +
      "v3.RawAudioH\000\0227\n\017container_audio\030\002 \001(\0132\034" +
      ".speechkit.v3.ContainerAudioH\000B\r\n\013AudioF" +
      "ormat\"\303\001\n\010RawAudio\022<\n\016audio_encoding\030\001 \001" +
      "(\0162$.speechkit.v3.RawAudio.AudioEncoding" +
      "\022\031\n\021sample_rate_hertz\030\002 \001(\003\022\033\n\023audio_cha" +
      "nnel_count\030\003 \001(\003\"A\n\rAudioEncoding\022\036\n\032AUD" +
      "IO_ENCODING_UNSPECIFIED\020\000\022\020\n\014LINEAR16_PC" +
      "M\020\001\"\273\001\n\016ContainerAudio\022M\n\024container_audi" +
      "o_type\030\001 \001(\0162/.speechkit.v3.ContainerAud" +
      "io.ContainerAudioType\"Z\n\022ContainerAudioT" +
      "ype\022$\n CONTAINER_AUDIO_TYPE_UNSPECIFIED\020" +
      "\000\022\007\n\003WAV\020\001\022\014\n\010OGG_OPUS\020\002\022\007\n\003MP3\020\003\"\032\n\nAud" +
      "ioChunk\022\014\n\004data\030\001 \001(\014\"#\n\014SilenceChunk\022\023\n" +
      "\013duration_ms\030\001 \001(\003Bk\n\023speechkit.common.v" +
      "3ZTa.yandex-team.ru/voicetech/asr/cloud_" +
      "engine/api/speechkit/v3/proto/common;spe" +
      "ech_kitb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_speechkit_v3_AudioContent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_speechkit_v3_AudioContent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speechkit_v3_AudioContent_descriptor,
        new java.lang.String[] { "Content", "AudioSpec", "AudioSource", });
    internal_static_speechkit_v3_AudioFormatOptions_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_speechkit_v3_AudioFormatOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speechkit_v3_AudioFormatOptions_descriptor,
        new java.lang.String[] { "RawAudio", "ContainerAudio", "AudioFormat", });
    internal_static_speechkit_v3_RawAudio_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_speechkit_v3_RawAudio_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speechkit_v3_RawAudio_descriptor,
        new java.lang.String[] { "AudioEncoding", "SampleRateHertz", "AudioChannelCount", });
    internal_static_speechkit_v3_ContainerAudio_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_speechkit_v3_ContainerAudio_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speechkit_v3_ContainerAudio_descriptor,
        new java.lang.String[] { "ContainerAudioType", });
    internal_static_speechkit_v3_AudioChunk_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_speechkit_v3_AudioChunk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speechkit_v3_AudioChunk_descriptor,
        new java.lang.String[] { "Data", });
    internal_static_speechkit_v3_SilenceChunk_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_speechkit_v3_SilenceChunk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_speechkit_v3_SilenceChunk_descriptor,
        new java.lang.String[] { "DurationMs", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
